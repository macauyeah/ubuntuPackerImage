#!/bin/bash

# echo every command
set -o xtrace
# exit when error
set -e
# Causes a pipeline to return the exit status of the last command in the pipe that returned a non-zero return value.
set -o pipefail

nodeName=("node21" "node22" "node23")
macAddress=("52:54:00:4b:ab:21" "52:54:00:4b:ab:22" "52:54:00:4b:ab:23")
ip=("10.13.31.21" "10.13.31.22" "10.13.31.23")

tmpNetplanFile="tmp-10-custom.yaml"

# assume that you already built os image with packer build template.pkr.hcl
imageFile=file://$PWD/output-autogenerated_1/packer-autogenerated_1

for ((i=0 ; i < 3 ; i++)) ; do
	multipass launch $imageFile --name ${nodeName[i]} --network name=localbr,mode=manual,mac="${macAddress[i]}" --cloud-init cloud-config.yaml
	cat << EOF > $tmpNetplanFile
network:
    version: 2
    ethernets:
        extra0:
            dhcp4: no
            match:
                macaddress: "${macAddress[i]}"
            addresses: [${ip[i]}/24]
EOF
	multipass transfer $tmpNetplanFile ${nodeName[i]}:.
	multipass exec -n ${nodeName[i]} -- sudo bash -c "sudo cp $tmpNetplanFile /etc/netplan/10-custom.yaml"
	multipass exec -n ${nodeName[i]} -- sudo chmod go-rxw /etc/netplan/10-custom.yaml
	multipass exec -n ${nodeName[i]} -- sudo netplan apply
done
rm $tmpNetplanFile

multipass exec -n ${nodeName[0]} -- sudo docker swarm init --advertise-addr ${ip[0]}
multipass exec -n ${nodeName[0]} -- sudo docker swarm join-token manager

managerToken=$(multipass exec -n ${nodeName[0]} -- sudo docker swarm join-token manager -q)
multipass exec -n ${nodeName[1]} -- sudo docker swarm join --token $managerToken ${ip[0]}:2377
multipass exec -n ${nodeName[2]} -- sudo docker swarm join --token $managerToken ${ip[0]}:2377

# for port forwarding
echo force update known_hosts public key of ${ip[0]}
sudo ssh-keygen -R ${ip[0]}
echo port forwarding to ${ip[0]}
sudo ssh -i /var/snap/multipass/common/data/multipassd/ssh-keys/id_rsa -L 0.0.0.0:8080:${ip[0]}:8080 ubuntu@${ip[0]}
